# 긍부정 어휘 / 감성분석(sentiment analysis)
#install.packages("tidytext")
library(tidytext)
bingsent <- get_sentiments("bing")
bingpos <- bingsent[bingsent$sentiment=="positive",]
bingneg <- bingsent[bingsent$sentiment=="negative",]

bingpos$word[1:30]
if(0)'
 [1] "abound"          "abounds"         "abundance"       "abundant"        "accessable"      "accessible"
 [7] "acclaim"         "acclaimed"       "acclamation"     "accolade"        "accolades"       "accommodative"
[13] "accomodative"    "accomplish"      "accomplished"    "accomplishment"  "accomplishments" "accurate"
[19] "accurately"      "achievable"      "achievement"     "achievements"    "achievible"      "acumen"
[25] "adaptable"       "adaptive"        "adequate"        "adjustable"      "admirable"       "admirably"  '

# 도수분포표
# 4장. 로빈슨 쿠르소 단어 도수분포표.r 참조
# 로빈슨 쿠르소 도수분포표에서 긍정어휘만 보기
RC_all_table[names(RC_all_table) %in% bingpos$word]
if(0)'
         good         great          like          work        enough          easy        strong     perfectly
          369           354           144           105            71            38            37            33
       secure          safe       recover        proper         fresh         ready       comfort        pretty
           32            31            30            29            28            28            26            26 '
# 로빈슨 크르소에서 사용된 부정어휘
RC_all_table[names(RC_all_table) %in% bingneg$word]
if(0)'
           lie           kill           fall         savage           poor          break          grind
           152            115             92             58             56             53             47
          wild           blow           hard         danger           hang           fear           lose
            46             42             42             41             39             33             33 '

# 막대그래프 작성
# las=2 축의 라벨값을 축과 직각방향으로 표현함.
barplot(RC_all_table[1:32], las=2)

RC_sent <- ifelse(RC_all %in% bingpos$word, 1, ifelse(RC_all %in% bingneg$word, -1, 0))
barplot(tapply(RC_sent, (seq_along(RC_sent)-1) %/% 1000, sum))

#install.packages("wordcloud")
library(wordcloud)
wordcloud(words = names(RC_all_table), freq = RC_all_table,
          max.words = 100)

# 부정 어위는 red, 긍정 어휘는 blue
wordcolor = rep("grey", length(RC_all_table))
wordcolor[names(RC_all_table) %in% bingpos$word] = "blue"
wordcolor[names(RC_all_table) %in% bingneg$word] = "red"
wordcloud(names(RC_all_table), RC_all_table, max.words = 100,
          colors = wordcolor, random.order = F, ordered.colors = T)


# 후반부에 등장하는 인물 'Friday'의 분포살피기
# firday의 위치를 1로, 아닌 곳은 0으로
friday <- ifelse(RC_all == "friday", 1, 0)
plot(friday, type="h", ylim = c(0,1))

# 긍부정 어휘 출현 위치 파악 ex)fear
fear <- ifelse(RC_all == "fear", 1, 0)
plot(fear, type="h", ylim=c(0,1))

# 긍부정 어휘 출현 위치 파악 ex)danger
danger <- ifelse(RC_all == "danger", 1, 0)
plot(danger, type="h", ylim=c(0,1))


# 두 챕터 비교
# 전처리
RC_by_Chpt <- unlist(strsplit(paste(RC_body, collapse = " "),
                              "CHAPTER"))[-1]
RC_by_Chpt <- gsub(pattern = "'s", replacement = "", x = RC_by_Chpt)
RC_by_Chpt <- gsub(RC_by_Chpt,
                   pattern = "([^[:alnum:][:blank:]'-])",
                   replacement = "")
RC_by_Chpt <- tolower(RC_by_Chpt)
RC_by_Chpt <- strsplit(RC_by_Chpt, " ")
RC_by_Chpt <- lapply(RC_by_Chpt,
                     function(x) x[! x %in% c(stopwords(), "")])
RC_by_Chpt <- lapply(RC_by_Chpt, lemmatize_strings)

# Ch3 Ch5 비교
# 5장에서 더 많이 등장한 단어는 + 반대는 _ / 출현 빈도 차이가 5 이상만
lev <- sort(unique(RC_all))
RC_Chpt3 <- table(factor(RC_by_Chpt[[3]], levels = lev, ordered = T))
RC_Chpt5 <- table(factor(RC_by_Chpt[[5]], levels = lev, ordered = T))

RC_Chpt5_3 <- RC_Chpt5 - RC_Chpt3
RC_Chpt5_3 <- sort(RC_Chpt5_3)
RC_Chpt5_3 <- RC_Chpt5_3[abs(RC_Chpt5_3)>5]

barplot(RC_Chpt5_3, las = 2)
RC_Chpt35 <- cbind(RC_Chpt3, RC_Chpt5)
commonality.cloud(RC_Chpt35, max.words = 200, random.order=FALSE)

comparison.cloud(RC_Chpt35, max.words = 200, random.order=FALSE)

RC_Chpt35 <- cbind(RC_Chpt35, RC_Chpt35[,1]-RC_Chpt35[,2])
RC_Chpt35col <- ifelse(RC_Chpt35[,3] > 10, "black",
                       ifelse(RC_Chpt35[,3] < -10, "blue", "grey"))
plot(RC_Chpt35[,1], RC_Chpt35[,2], type = "n")
text(RC_Chpt35[,1], RC_Chpt35[,2], row.names(RC_Chpt35),
     col = RC_Chpt35col)
